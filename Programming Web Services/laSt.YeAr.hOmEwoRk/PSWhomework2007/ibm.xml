<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by John (NJU) -->
<xs:schema targetNamespace="http://www.ibm.com" xmlns="http://www.ibm.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>Resume Schema Definition V1.1</xs:documentation>
	</xs:annotation>
	<xs:element name="Resume">
		<xs:annotation>
			<xs:documentation>It describes a resume or CV of a candidate being submitted for the job positions. It specifies a candidate's contact information, his objectives, education history, language capability, experience, qualifications and professional associations. At the end, there can be a brief summary.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ContactInfo" type="ContactInfoType"/>
				<xs:element name="EducationHistory">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Education" type="EducationType" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Experience" type="ExperienceType" minOccurs="0"/>
				<xs:element name="Summary" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:maxLength value="1024"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
    </xs:element>
	<!-- =====================Contact Info Definition========================-->
	<xs:complexType name="ContactInfoType">
		<xs:annotation>
			<xs:documentation>It specifies the information to contact a person or an organization, including the person name, and his contact methods, such as phones, fax, emails, postal address, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PersonName" type="PersonNameType"/>
			<xs:element name="ContactMethod" type="ContactMethodType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PersonNameType">
		<xs:annotation>
			<xs:documentation>It is person name information, including the given name, family name and optional middle name. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GivenName" type="NameType"/>
			<xs:element name="MiddleName" type="NameType" minOccurs="0"/>
			<xs:element name="FamilyName" type="NameType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContactMethodType">
		<xs:annotation>
			<xs:documentation>It defines the methods to contact a person or an organization. It includes phones, fax, pager, emails, web site and postal address. A noticeable thing is that the first email in sequence is regarded as the main email address, and the second one, if existing, acts as a backup email</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Phone" type="PhoneNumberType" maxOccurs="3"/>
			<xs:element name="Fax" type="PhoneNumberType" minOccurs="0"/>
			<xs:element name="Pager" type="PhoneNumberType" minOccurs="0"/>
			<xs:element name="InternetEmailAddress" type="InternetEmailAddressType" maxOccurs="2"/>
			<xs:element name="InternetWebAddress" type="InternetWebAddressType" minOccurs="0"/>
			<xs:element name="Postal" type="PostalType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PostalType">
		<xs:sequence>
			<xs:element name="PostalAddress">
				<xs:simpleType>
					<xs:restriction base="PostalAddressType"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PostalCode" type="PostalCodeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PostalAddressType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PostalCodeType">
		<xs:annotation>
			<xs:documentation>Postal code is consist of 6 digits,  and starts with non-zero digit.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[1-9][0-9]{5}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InternetEmailAddressType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="128"/>
			<xs:pattern value="[^@]+@[^.]+\..+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InternetWebAddressType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="128"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PhoneNumberType">
		<xs:annotation>
			<xs:documentation>It specifies a phone number, including its area city code, subscriber number and extension number. And there is a required type to specify the phone purpose, such as home, office or mobile.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AreaCode" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="6"/>
						<xs:pattern value="[\d]*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="SubscriberNumber">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="12"/>
						<xs:pattern value="[\d]*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Extension" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="8"/>
						<xs:pattern value="[\d]*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Home"/>
					<xs:enumeration value="Office"/>
					<xs:enumeration value="Mobile"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<!-- =====================End of Contact Info Definition=================  -->
	<!-- =====================Education History ===========================-->
	<xs:complexType name="EducationType">
		<xs:annotation>
			<xs:documentation>It describes a piece of education experience, including the school name, the degree name and major information. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SchoolName" type="NameType"/>
			<xs:element name="Degree" type="DegreeType"/>
			<xs:element name="Major" type="MajorType"/>
			<xs:element name="DissertationName" type="NameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of the degree dissertation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QualificationReference" type="QualificationReferenceType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Here to list the qualifications that are achieved during the education experience. They refer to qualifications specified in the Qualifications dimension.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="MajorType">
		<xs:annotation>
			<xs:documentation>It describes the major of a formal education degree. It is the union of the MajorEnumType and the NameType. So its value can be an item listed in the MajorEnumType, or a customized value conforming to the NameType.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="MajorEnumType NameType"/>
	</xs:simpleType>
	<xs:simpleType name="MajorEnumType">
		<xs:annotation>
			<xs:documentation>It lists several major names, including CS, EE, Math, Automation, Information, Physics, and so on.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Computer Science"/>
			<xs:enumeration value="Electronic Engineering"/>
			<xs:enumeration value="Math"/>
			<xs:enumeration value="Information"/>
			<xs:enumeration value="Physics"/>
			<xs:enumeration value="Automation"/>
			<xs:enumeration value="Psychology"/>
			<xs:enumeration value="Behavioral Science"/>
			<xs:enumeration value="Recognition"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DegreeType">
		<xs:annotation>
			<xs:documentation>It describes a degree, including its name and granted date.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DegreeName">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Doctor"/>
						<xs:enumeration value="Master"/>
						<xs:enumeration value="Bachelor"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DegreeDate" type="FlexibleDates"/>
		</xs:sequence>
	</xs:complexType>
	<!-- ===================End of Education History =======================-->
	<!-- =====================Experience Definition==========================-->
	<xs:complexType name="ExperienceType">
		<xs:annotation>
			<xs:documentation>It describes a candidate's experience, including his project experience, employment history, professional training and social activity experience. It should be noticed that there are two special elements in every experience, one is the DemonstratedSkills and the other is the QualificationReference. The DemonstratedSkills is used to specify what skills are demonstrated (applied in or acquired from) during the experience, and the QualificationReference is used to specify the qualifications which could prove your success during the experience. An important state is that the value of the QualificationReference element must refer to an item you inputted in the Qualifications dimension.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Project" type="ProjectType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Employment" type="EmploymentType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ProfessionalTraining" type="ProfessionalTrainingType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="SocialActivity" type="SocialActivityType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProfessionalTrainingType">
		<xs:annotation>
			<xs:documentation>It describes a professional training, such as the training name, provider, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TrainingName" type="NameType"/>
			<xs:element name="TrainingProvider" type="NameType"/>
			<xs:element name="TrainingSite" type="NameType" minOccurs="0"/>
			<xs:element name="Duration" type="DurationType"/>
			<xs:element name="DemonstratedSkills" type="DemonstratedSkillsType" minOccurs="0"/>
			<xs:element name="QualificationReference" type="QualificationReferenceType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EmploymentType">
		<xs:annotation>
			<xs:documentation>It describes a candidate's employment experience in one unit. Except the employer information, there are positions a candidate have held in the unit.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EmployerInfo" type="EmployerInfoType"/>
			<xs:element name="Position" type="PositionType" maxOccurs="unbounded"/>
			<xs:element name="ReferencePerson" type="ContactInfoType" minOccurs="0"/>
			<xs:element name="ReasonToLeave" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="TextDescriptionType">
						<xs:maxLength value="256"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProjectType">
		<xs:annotation>
			<xs:documentation>It describes a candidate's experience in a project. There is a required attribute isResearchProject to specify whether the project is a research project or not. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ProjectName" type="NameType"/>
			<xs:element name="ProjectDescription" type="TextDescriptionType"/>
			<xs:element name="ProjectKeyword" minOccurs="0" maxOccurs="6">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="16"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Sponsor" type="NameType" minOccurs="0"/>
			<xs:element name="PersonMonthScale" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RoleInProject" type="RoleType" maxOccurs="unbounded"/>
			<xs:element name="Duration" type="DurationType"/>
			<xs:element name="PersonalContributionDescription" type="TextDescriptionType" minOccurs="0"/>
			<xs:element name="ReferencePerson" type="ContactInfoType" minOccurs="0"/>
			<xs:element name="DemonstratedSkills" type="DemonstratedSkillsType" minOccurs="0"/>
			<xs:element name="QualificationReference" type="QualificationReferenceType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="isResearchProject" type="xs:boolean" use="required"/>
	</xs:complexType>
	<xs:complexType name="SocialActivityType">
		<xs:annotation>
			<xs:documentation>It describes a social activity, including a brief description, time duration, played roles etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ActivityDescription">
				<xs:simpleType>
					<xs:restriction base="TextDescriptionType">
						<xs:maxLength value="256"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Duration" type="DurationType"/>
			<xs:element name="Role" maxOccurs="unbounded">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="32"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DemonstratedSkills" type="DemonstratedSkillsType" minOccurs="0"/>
			<xs:element name="QualificationReference" type="QualificationReferenceType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EmployerInfoType">
		<xs:annotation>
			<xs:documentation>It describes information of an employer.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EmployerOrgName" type="NameType"/>
			<xs:element name="OrgSize" minOccurs="0">
				<xs:annotation>
					<xs:documentation>It means the number of employee of the position organization.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OrgLocationCity" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:maxLength value="32"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="WebSite" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="InternetWebAddressType"/>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PositionType">
		<xs:annotation>
			<xs:documentation>It describes a position that a candidate has held in the position organization.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Title" type="NameType"/>
			<xs:element name="Department" type="NameType" minOccurs="0"/>
			<xs:element name="ContributionDescription" type="TextDescriptionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Here to brief introduce a candidate's contribution and achievement in the position.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="DurationType"/>
			<xs:element name="DemonstratedSkills" type="DemonstratedSkillsType" minOccurs="0"/>
			<xs:element name="QualificationReference" type="QualificationReferenceType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QualificationReferenceType">
		<xs:annotation>
			<xs:documentation>It defines how to refer to the specified qualifications in the Qualification dimension. Consistent with the Qualification definition, here are five choice of reference.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="AwardRef" type="NameType">
				<xs:annotation>
					<xs:documentation>It refers to the AwardName in the Qualification/Award.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CertificationRef" type="NameType">
				<xs:annotation>
					<xs:documentation>It refers to the CertificationTitle in the Qualification/Certification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PatentRef" type="NameType">
				<xs:annotation>
					<xs:documentation>It refers to the PatentName in the Qualification/Patent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PublicationRef" type="NameType">
				<xs:annotation>
					<xs:documentation>It refers to the PublicationTitle in the Qualification/Publication.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecialityRef" type="NameType">
				<xs:annotation>
					<xs:documentation>It refers to the SpecialityTitle in the Qualification/Speciality.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="RoleType">
		<xs:annotation>
			<xs:documentation>It specifies a candidate's role in a project. It is the union of the RoleEnumType and NameType. A valid value can be either an item from the predefined RoleEnumType enumeration, or a customized value conforming to the NameType.</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="RoleEnumType NameType"/>
	</xs:simpleType>
	<xs:simpleType name="RoleEnumType">
		<xs:annotation>
			<xs:documentation>It defines several common roles, such as Manager, Architect, Analyzer, Designer, Coder and Tester.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Manager"/>
			<xs:enumeration value="Architect"/>
			<xs:enumeration value="Designer"/>
			<xs:enumeration value="Tester"/>
			<xs:enumeration value="Coder"/>
			<xs:enumeration value="Analyzer"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- =====================End of Experience Definition===================-->
	<!--  -->
	<xs:simpleType name="NameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="128"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TextDescriptionType">
		<xs:annotation>
			<xs:documentation>Usually it is used to describe various description, such as personal contribution description, etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="512"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- =====================Skill Definition===============================-->
	<xs:complexType name="DemonstratedSkillsType">
		<xs:annotation>
			<xs:documentation>It specified skills demonstrated in a piece of experience, or a qualification. It includes both technical skills and non technical skills. For example, in a piece of project experience, both programming skill(technical) and leadership skill(non-technical) are demonstrated.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TechnicalSkill" type="TechSkillType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="NonTechnicalSkill" type="NonTechSkillType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Such as Communication, Leadership, and so on</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TechSkillType">
		<xs:sequence>
			<xs:element name="SkillName" type="NameType"/>
			<xs:element name="SkillLevel" type="SkillLevelType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NonTechSkillType">
		<xs:sequence>
			<xs:element name="SkillName" type="NameType"/>
			<xs:element name="SkillLevel" type="SkillLevelType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="SkillLevelType">
		<xs:annotation>
			<xs:documentation>It defines three skill levels, outstanding, above average and normal.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Outstanding"/>
			<xs:enumeration value="AboveAverage"/>
			<xs:enumeration value="Normal"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- =====================End of Skill Definition========================-->
	<!-- =====================Date Definition================================-->
	<xs:complexType name="DurationType">
		<xs:annotation>
			<xs:documentation>It describes a time span by specifying the start date and the end date. The end date can be blank, which means it is still going on.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StartDate" type="FlexibleDates"/>
			<xs:element name="EndDate" type="FlexibleDates" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlexibleDates">
		<xs:annotation>
			<xs:documentation>It specifies a date value. It can be either Year, YearMonth, or YearMonthDay. User can choose proper format flexibly.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="YearMonth" type="xs:gYearMonth"/>
			<xs:element name="YearMonthDay" type="LocalDateType"/>
			<xs:element name="Year" type="xs:gYear"/>
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="LocalDateType">
		<xs:annotation>
			<xs:documentation>It defines a date type in format YYYY-MM-DD.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:date">
			<xs:pattern value="\d\d\d\d-\d\d-\d\d"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- =====================End of Date Definition=========================-->
</xs:schema>
